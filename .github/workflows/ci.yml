name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  INTERNAL_API_KEY: ${{ secrets.INTERNAL_API_KEY }}
  FAKE_OPENAI: ${{ secrets.FAKE_OPENAI }}

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt

      - name: Run pre-commit hooks
        run: pre-commit run --all-files

      - name: Run linters (black, isort, flake8, mypy)
        run: |
          black . --check
          isort . --check-only
          flake8 .
          mypy .

  test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
          pip install coverage pytest-cov

      - name: Run tests with coverage
        run: |
          coverage run -m pytest tests
          coverage report -m
          coverage xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage.xml
          flags: unittests
          fail_ci_if_error: true

  secrets-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install detect-secrets
        run: pip install detect-secrets

      - name: Run detect-secrets scan
        run: detect-secrets scan --baseline .secrets.baseline
